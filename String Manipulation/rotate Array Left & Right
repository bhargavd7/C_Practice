
#include <stdio.h>

void rotateRight(int* ptr, int size, int n);
void rotareLeft(int* ptr, int size, int n);

int main()
{
    printf("Hello World");
    int array[5] = {1,2,3,4,5};
    int* ptr = &array[0];
    int i;
    for(i=0;i<5;i++)
    {
        printf("\n\r%d",ptr[i]);
    }
    rotateRight(&array[0],5,5);
    rotareLeft(&array[0],5,0);
    printf("\n\r ******************");
    for(i=0;i<5;i++)
    {
        printf("\n\r%d",array[i]);
    }
    return 0;
}

void rotateRight(int* ptr, int size, int n)
{
    int* temp = (int*)malloc(sizeof(int)*n);
    int* tPtr = ptr;
    int* tPtr2 = ptr;
    tPtr+=n;
    tPtr2 += size-n;
    memcpy(temp, tPtr2, n*sizeof(int));
    memmove(tPtr, ptr, sizeof(int)*(size-n));
    memcpy(ptr, temp, n*sizeof(int));
    free(temp);
    temp = NULL;
}

void rotareLeft(int* ptr, int size, int n)
{
    int* temp = (int*)malloc(sizeof(int)*n);
    int* tPtr = ptr;
    int* tPtr2 = ptr;
    tPtr+=n;
    tPtr2 += size-n;
    memcpy(temp,ptr,sizeof(int)*n);
    memmove(ptr,tPtr,sizeof(int)*(size-1));
    memcpy(tPtr2, temp, sizeof(int)*n);
    free(temp);
    temp = NULL;
}
